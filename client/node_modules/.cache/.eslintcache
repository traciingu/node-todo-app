[{"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\index.js":"1","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoCard.js":"2","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoForm.js":"3","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoList.js":"4","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\CompleteButton.js":"5","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\todoServices.js":"6"},{"size":270,"mtime":1634846982403,"results":"7","hashOfConfig":"8"},{"size":3305,"mtime":1635882310987,"results":"9","hashOfConfig":"8"},{"size":1148,"mtime":1635869650538,"results":"10","hashOfConfig":"8"},{"size":2802,"mtime":1635789134012,"results":"11","hashOfConfig":"8"},{"size":538,"mtime":1634846982400,"results":"12","hashOfConfig":"8"},{"size":506,"mtime":1635871086494,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rqfpz1",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\index.js",[],["28","29"],"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoCard.js",["30","31"],"import React, { useEffect, useState } from 'react';\r\nimport './style/TodoCard.css';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { BsMoon } from 'react-icons/bs';\r\nimport { HiSun } from 'react-icons/hi';\r\n\r\nimport { getTodos, createTodo, updateTodo, deleteTodo } from './todoServices';\r\n\r\nexport default function TodoCard() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [activeFilter, setActiveFilter] = useState('all'); // all, active, completed\r\n    const [themeState, setThemeState] = useState('light');\r\n\r\n    const handleSubmit = async (name, completed) => {\r\n        await createTodo({ name: name, completed: completed });\r\n    };\r\n\r\n    const handleUpdate = async (id, name, completed) => {\r\n        await updateTodo(id, {name: name, completed: completed});\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        await deleteTodo(id);\r\n    };\r\n\r\n    const getFilteredTodos = async () => {\r\n        try {\r\n            setTodos(await getTodos(activeFilter).then((result) => result.data));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    };\r\n\r\n    const clearCompleted = async () => {\r\n        try {\r\n            await getTodos('completed').then((result) => result.data.map((todo) => handleDelete(todo._id)));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFilteredTodos();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getFilteredTodos();\r\n    }, [activeFilter, todos]);\r\n\r\n    return (\r\n        <div className={\"todo-card \" + themeState}>\r\n            <header className={themeState.toLowerCase() === 'light' ? 'light' : 'dark'}>\r\n                <div className=\"inner-header\">\r\n                    <h1 className=\"uppercase title\">Todo</h1>\r\n                    <button type=\"button\" className=\"theme-switch-btn\" onClick={() => themeState.toLowerCase() === 'light' ? setThemeState('dark') : setThemeState('light')}>{themeState.toLowerCase() === 'light' ? <BsMoon /> : <HiSun />}</button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"todo-card-body\">\r\n                <TodoForm addTodo={handleSubmit} themeState={themeState} />\r\n                <TodoList todos={todos} editTodo={handleUpdate} removeTodo={handleDelete} themeState={themeState} />\r\n\r\n                <div className={\"todo-card-options \" + themeState}>\r\n                    <div className={\"inner-card-options \" + themeState}>\r\n                        <p>{todos.length} items left</p>\r\n                        <button onClick={() => clearCompleted()} >Clear Completed</button>\r\n                    </div>\r\n                    <div className={\"todo-card-filters \" + themeState}>\r\n                        <button onClick={() => setActiveFilter('all')} className={activeFilter.toLowerCase() === \"all\" ? \"active\" : \"\"}>All</button>\r\n                        <button onClick={() => setActiveFilter('active')} className={activeFilter.toLowerCase() === \"active\" ? \"active\" : \"\"}>Active</button>\r\n                        <button onClick={() => setActiveFilter('completed')} className={activeFilter.toLowerCase() === \"completed\" ? \"active\" : \"\"}>Completed</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoForm.js",[],"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\TodoList.js",[],"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\CompleteButton.js",[],"C:\\Users\\tracii\\Documents\\Tracy\\Projects\\node-todo-app\\client\\src\\todoServices.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":46,"column":8,"nodeType":"38","endLine":46,"endColumn":10,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":50,"column":8,"nodeType":"38","endLine":50,"endColumn":29,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFilteredTodos'. Either include it or remove the dependency array.","ArrayExpression",["43"],["44"],"no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},{"desc":"47","fix":"48"},"Update the dependencies array to be: [getFilteredTodos]",{"range":"49","text":"50"},"Update the dependencies array to be: [activeFilter, getFilteredTodos, todos]",{"range":"51","text":"52"},[1430,1432],"[getFilteredTodos]",[1497,1518],"[activeFilter, getFilteredTodos, todos]"]