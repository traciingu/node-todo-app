{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tracii\\\\Documents\\\\Tracy\\\\Projects\\\\node-todo-app\\\\client\\\\src\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style/TodoForm.css';\nimport CompleteButton from './CompleteButton';\nimport { FiPlus } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoForm({\n  addTodo,\n  themeState\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim().length > 0) {\n      addTodo(name, completed);\n      setCompleted(false);\n      setName(\"\");\n    }\n  };\n\n  const handleClick = () => {\n    setCompleted(!completed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `card-item create-todo-form ${themeState} ${completed ? \"completed\" : \"\"}`,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CompleteButton, {\n      isComplete: completed,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Create a new todo...\",\n      className: \"card-item-name \" + (completed ? \"strike\" : \"\"),\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"create-todo-form-btn\",\n      children: /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"43mdpjnMe+XYTbaIBf8LKI1Cd4g=\");\n\n_c = TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/tracii/Documents/Tracy/Projects/node-todo-app/client/src/TodoForm.js"],"names":["React","useState","CompleteButton","FiPlus","TodoForm","addTodo","themeState","name","setName","completed","setCompleted","handleSubmit","e","preventDefault","trim","length","handleClick","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,MAAR,QAAqB,gBAArB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,EAA2C;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIN,IAAI,CAACO,IAAL,GAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AACxBV,MAAAA,OAAO,CAACE,IAAD,EAAOE,SAAP,CAAP;AACAC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GARD;;AAUA,QAAMQ,WAAW,GAAG,MAAM;AACtBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,SAAS,EAAG,8BAA6BH,UAAW,IAAGG,SAAS,GAAG,WAAH,GAAiB,EAAG,EAA1F;AAA6F,IAAA,QAAQ,EAAEE,YAAvG;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEF,SAA5B;AAAuC,MAAA,WAAW,EAAEO;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,sBAA/B;AAAsD,MAAA,SAAS,EAAE,qBAAqBP,SAAS,GAAG,QAAH,GAAc,EAA5C,CAAjE;AAAkH,MAAA,KAAK,EAAEF,IAAzH;AAA+H,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV;AAAvJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAA,6BAAuD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBuBd,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport './style/TodoForm.css';\r\nimport CompleteButton from './CompleteButton';\r\nimport {FiPlus} from 'react-icons/fi';\r\n\r\nexport default function TodoForm({ addTodo, themeState }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [completed, setCompleted] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (name.trim().length > 0) {\r\n            addTodo(name, completed);\r\n            setCompleted(false);\r\n            setName(\"\");\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setCompleted(!completed);\r\n    };\r\n\r\n    return (\r\n        <form className={`card-item create-todo-form ${themeState} ${completed ? \"completed\" : \"\"}`} onSubmit={handleSubmit}>\r\n            <CompleteButton isComplete={completed} handleClick={handleClick}/>\r\n            <input type=\"text\" placeholder=\"Create a new todo...\" className={\"card-item-name \" + (completed ? \"strike\" : \"\")} value={name} onChange={(e) => setName(e.target.value)} />\r\n            <button type=\"submit\" className=\"create-todo-form-btn\"><FiPlus/></button>\r\n        </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}