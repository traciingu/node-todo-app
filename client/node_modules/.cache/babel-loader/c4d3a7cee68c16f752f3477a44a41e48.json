{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tracii\\\\Documents\\\\Tracy\\\\Projects\\\\node-todo-app\\\\client\\\\src\\\\TodoCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style/TodoCard.css';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { BsMoon } from 'react-icons/bs';\nimport { HiSun } from 'react-icons/hi';\nimport { getTodos, getTodo, createTodo, updateTodo, deleteTodo } from './todoServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoCard() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [themeState, setThemeState] = useState('light');\n\n  const addTodo = (name, completed) => {\n    // setTodos([...todos, { name: name, completed: completed }]);\n    createTodo({\n      name: name,\n      completed: completed\n    });\n    getTodos().then(result => console.log(result.data.filter(todo => {\n      if (activeFilter.toLowerCase() === \"all\") {\n        return todo;\n      } else if (activeFilter.toLowerCase() === \"active\") {\n        return todo.completed === false;\n      } else if (activeFilter.toLowerCase() === \"completed\") {\n        return todo.completed === true;\n      }\n    })));\n  };\n\n  const editTodo = (id, name, completed) => {\n    const newTodos = [...todos];\n    newTodos.splice(id, 1, {\n      name: name,\n      completed: completed\n    });\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const newTodos = [...todos];\n    newTodos.splice(id, 1);\n    setTodos(newTodos);\n  };\n\n  const filterTodos = async () => {\n    const filteredTodos = getTodos().then(result => {\n      return result.data.filter(todo => {\n        if (activeFilter.toLowerCase() === \"all\") {\n          return todo;\n        } else if (activeFilter.toLowerCase() === \"active\") {\n          return todo.completed === false;\n        } else if (activeFilter.toLowerCase() === \"completed\") {\n          return todo.completed === true;\n        }\n      });\n    });\n\n    try {\n      // const fTodos = await filteredTodos;\n      setTodos(await filteredTodos);\n    } catch (err) {\n      console.log(err);\n    } // console.log(`await todos: ${JSON.stringify(todos.data.map(x => x.completed))}`)\n    // return filteredTodos;\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-card \" + themeState,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: themeState.toLowerCase() === 'light' ? 'light' : 'dark',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"uppercase title\",\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"theme-switch-btn\",\n          onClick: () => themeState.toLowerCase() === 'light' ? setThemeState('dark') : setThemeState('light'),\n          children: themeState.toLowerCase() === 'light' ? /*#__PURE__*/_jsxDEV(BsMoon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 214\n          }, this) : /*#__PURE__*/_jsxDEV(HiSun, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 227\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-card-body\",\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo,\n        themeState: themeState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        editTodo: editTodo,\n        removeTodo: removeTodo,\n        themeState: themeState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), filterTodos(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-card-options \" + themeState,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-card-options \" + themeState,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [todos.length, \" items left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTodos(todos.filter(todo => todo.completed === false)),\n            children: \"Clear Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-card-filters \" + themeState,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveFilter('all'),\n            className: activeFilter.toLowerCase() === \"all\" ? \"active\" : \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveFilter('active'),\n            className: activeFilter.toLowerCase() === \"active\" ? \"active\" : \"\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveFilter('completed'),\n            className: activeFilter.toLowerCase() === \"completed\" ? \"active\" : \"\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoCard, \"wWxLlPdQ+QTwBTgigvLuR4rdpag=\");\n\n_c = TodoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"sources":["C:/Users/tracii/Documents/Tracy/Projects/node-todo-app/client/src/TodoCard.js"],"names":["React","useState","TodoForm","TodoList","BsMoon","HiSun","getTodos","getTodo","createTodo","updateTodo","deleteTodo","TodoCard","todos","setTodos","activeFilter","setActiveFilter","themeState","setThemeState","addTodo","name","completed","then","result","console","log","data","filter","todo","toLowerCase","editTodo","id","newTodos","splice","removeTodo","filterTodos","filteredTodos","err","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './style/TodoCard.css';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { BsMoon } from 'react-icons/bs';\r\nimport { HiSun } from 'react-icons/hi';\r\n\r\nimport { getTodos, getTodo, createTodo, updateTodo, deleteTodo } from './todoServices';\r\n\r\nexport default function TodoCard() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [activeFilter, setActiveFilter] = useState('all');\r\n    const [themeState, setThemeState] = useState('light');\r\n\r\n    const addTodo = (name, completed) => {\r\n        // setTodos([...todos, { name: name, completed: completed }]);\r\n        createTodo({ name: name, completed: completed });\r\n        getTodos().then((result) => console.log(result.data.filter(todo => {\r\n            if (activeFilter.toLowerCase() === \"all\") {\r\n                return todo;\r\n            } else if (activeFilter.toLowerCase() === \"active\") {\r\n                return todo.completed === false;\r\n            } else if (activeFilter.toLowerCase() === \"completed\") {\r\n                return todo.completed === true;\r\n            }\r\n        })\r\n        ));\r\n    };\r\n\r\n    const editTodo = (id, name, completed) => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(id, 1, { name: name, completed: completed });\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(id, 1);\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    \r\n\r\n    const filterTodos = async () => {\r\n        const filteredTodos = getTodos().then((result) => {\r\n            return result.data.filter(todo => {\r\n                if (activeFilter.toLowerCase() === \"all\") {\r\n                    return todo;\r\n                } else if (activeFilter.toLowerCase() === \"active\") {\r\n                    return todo.completed === false;\r\n                } else if (activeFilter.toLowerCase() === \"completed\") {\r\n                    return todo.completed === true;\r\n                }\r\n            })\r\n        });\r\n\r\n        try {\r\n            // const fTodos = await filteredTodos;\r\n            setTodos(await filteredTodos);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        // console.log(`await todos: ${JSON.stringify(todos.data.map(x => x.completed))}`)\r\n        // return filteredTodos;\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"todo-card \" + themeState}>\r\n            <header className={themeState.toLowerCase() === 'light' ? 'light' : 'dark'}>\r\n                <div className=\"inner-header\">\r\n                    <h1 className=\"uppercase title\">Todo</h1>\r\n                    <button type=\"button\" className=\"theme-switch-btn\" onClick={() => themeState.toLowerCase() === 'light' ? setThemeState('dark') : setThemeState('light')}>{themeState.toLowerCase() === 'light' ? <BsMoon /> : <HiSun />}</button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"todo-card-body\">\r\n                <TodoForm addTodo={addTodo} themeState={themeState} />\r\n                <TodoList todos={todos} editTodo={editTodo} removeTodo={removeTodo} themeState={themeState} />\r\n                {/* {console.log([{ _id: '6175b813ad843e9e08a627f4', name: 'Truffle', completed: false, __v: 0 },\r\n                { _id: '617ae0dd23b80f3c21cccadc', name: 'Apple', completed: false, __v: 0 },\r\n                { _id: '617ae12323b80f3c21cccae1', name: 'Oranges', completed: false, __v: 0 },\r\n                { _id: '617ae13a23b80f3c21cccae4', name: 'Milk', completed: true, __v: 0 },\r\n                { _id: '617ae14523b80f3c21cccae7', name: 'Cake', completed: false, __v: 0 }].filter(x => x.completed == false).map((x, index) => `${index}: ${x.name}`))} */}\r\n                {filterTodos()}\r\n                {/* {console.log(\"todos: \" + todos)} */}\r\n\r\n                <div className={\"todo-card-options \" + themeState}>\r\n                    <div className={\"inner-card-options \" + themeState}>\r\n                        <p>{todos.length} items left</p>\r\n                        <button onClick={() => setTodos(todos.filter(todo => todo.completed === false))} >Clear Completed</button>\r\n                    </div>\r\n                    <div className={\"todo-card-filters \" + themeState}>\r\n                        <button onClick={() => setActiveFilter('all')} className={activeFilter.toLowerCase() === \"all\" ? \"active\" : \"\"}>All</button>\r\n                        <button onClick={() => setActiveFilter('active')} className={activeFilter.toLowerCase() === \"active\" ? \"active\" : \"\"}>Active</button>\r\n                        <button onClick={() => setActiveFilter('completed')} className={activeFilter.toLowerCase() === \"completed\" ? \"active\" : \"\"}>Completed</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}